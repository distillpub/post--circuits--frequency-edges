<% units = {
  "AlexNet": {
    "layer_link": "https://microscope.openai.com/models/alexnet/Conv2D_2_0?models.op.feature_vis.type=channel&models.op.technique=feature_vis",
    "layer": "Conv2D_2",
    "prev_layer_link": "https://microscope.openai.com/models/alexnet/conv1_1_0?models.op.feature_vis.type=channel&models.op.technique=feature_vis",
    "prev_layer": "conv1_1",
    "units": [55, 47, 87, 33, 77, 102],
    "neurons_link": "https://microscope.openai.com/models/alexnet/Conv2D_2_0/",
  },
  "InceptionV3_slim": {
    "layer_link": "https://microscope.openai.com/models/inceptionv3_slim/InceptionV3_InceptionV3_Conv2d_4a_3x3_Relu_0?models.op.feature_vis.type=channel&models.op.technique=feature_vis",
    "layer": "Conv2d_4a",
    "prev_layer_link": "https://microscope.openai.com/models/inceptionv3_slim/InceptionV3_InceptionV3_Conv2d_3b_1x1_Relu_0?models.op.feature_vis.type=channel&models.op.technique=feature_vis",
    "prev_layer": "Conv2d_3b",
    "units": [82, 83, 137, 139, 155, 159],
    "neurons_link": "https://microscope.openai.com/models/inceptionv3_slim/InceptionV3_InceptionV3_Conv2d_4a_3x3_Relu_0/",
  },
  "ResnetV2_50_slim": {
    "layer_link": "https://microscope.openai.com/models/resnetv2_50_slim/resnet_v2_50_block2_unit_1_bottleneck_v2_conv2_Relu_0?models.op.feature_vis.type=channel&models.op.technique=feature_vis",
    "layer": "B2_U1_conv2",
    "prev_layer_link": "https://microscope.openai.com/models/resnetv2_50_slim/resnet_v2_50_block2_unit_2_bottleneck_v2_conv1_Relu_0?models.op.feature_vis.type=channel&models.op.technique=feature_vis",
    "prev_layer": "B2_U1_conv1",
    "units": [118, 41, 53, 44, 25, 50],
    "neurons_link": "https://microscope.openai.com/models/resnetv2_50_slim/resnet_v2_50_block2_unit_1_bottleneck_v2_conv2_Relu_0/",
  },
}
%>

<style>
    .upstream-nmf {
        display: grid;
        grid-row-gap: 2rem;
        margin-bottom: 3rem;
    }

    .upstream-nmf .row {
        display: grid;
        grid-template-columns: min-content 1fr 6fr;
        grid-column-gap: 1rem;
        grid-row-gap: .5rem;

    }

    .units,
    .weights {
        display: grid;
        grid-template-columns: repeat(6, 1fr);
        grid-gap: 0.5rem;
        grid-column-start: 3;
    }

    img.fv {
        max-width: 100%;
        border-radius: 8px;
    }

    div.units img.full {
        margin-left: 1px;
    }

    img.full {
        width: unset;
        object-fit: none;
        object-position: center;
        image-rendering: optimizeQuality;
    }

    img.weight {
        width: 100%;
        image-rendering: pixelated;
        align-self: center;
        border: 1px solid #ccc;
    }

    img.factor {
        /* padding-right: 0.75rem; */
    }

    .annotated-image {
        display: grid;
        grid-auto-flow: column;
        align-items: center;
    }

    .annotated-image span {
        writing-mode: vertical-lr;
    }

    .layer-label {
        grid-row-start: span 2;
        border-right: 1px solid #aaa;
        text-align: end;
    }

    .layer-label label {
        display: inline-block;
        margin-right: .5em;
        writing-mode: vertical-lr;

    }

    .layer-label.hidden {
        border-color: transparent;
    }

    .layer-label.hidden label {
        visibility: hidden;
    }

</style>

<d-figure id="figure-14">
    <figure>
        <% for (const network_name of ["AlexNet", "InceptionV3_slim", "ResnetV2_50_slim"]) {%>
        <h4> <%= network_name %> </h4>
        <div class="upstream-nmf">
            <div class="row">
                <div class="layer-label hidden"><label class="figcaption">layer</label></div>
                <div class="units">
                    <% for (const index of [0, 1, 2, 3, 4, 5]) {%>
                    <a href="<%= units[network_name].neurons_link + units[network_name].units[index]%>">
                        <img class="fv full" src="<%= `diagrams/6.0-universality/${network_name}-${index}.png` %>"
                            title="<%= "Unit " + units[network_name].units[index] %>" />
                        <% } %>
                    </a>
                </div>
            </div>
            <div class="row">
                <div class="layer-label"><label
                        class="figcaption"><%= units[network_name].layer + " &rightarrow; " + units[network_name].prev_layer %></label>
                </div>
                <% for (const hilo of ["hi", "lo"]) {%>
                <div class="annotated-image">
                    <span class="figcaption"><%= hilo == "hi" ? "HF-factor" : "LF-factor" %></span>
                    <img class="fv full factor" src="<%= `diagrams/6.0-universality/${network_name}-${hilo}.png` %>" />
                </div>
                <div class="weights">
                    <% for (const index of [0, 1, 2, 3, 4, 5]) {%>
                    <img class="weight" src="<%= `diagrams/6.0-universality/${network_name}-${index}-${hilo}.png` %>"
                        title="<%= "Unit " + units[network_name].units[index] %>" />
                    <% } %>
                </div>
                <% } %>
            </div>
        </div>
        <% } %>
        <figcaption>
            <a href="#figure-15" class="figure-number">15</a>:
            NMF of high-low frequency detectors in

            <% for (const network_name of ["AlexNet", "InceptionV3_slim", "ResnetV2_50_slim"]) {%>
            <%= network_name=='ResnetV2_50_slim' ? ' and ' : '' %>
            <%= network_name %>'s
            <a href="<%= units[network_name].layer_link %>"><%= units[network_name].layer %></a> with respect to <a
                href="<%= units[network_name].prev_layer_link %>"><%= units[network_name].prev_layer %></a>,
            <% } %>
            showing <span class="legend-label support">activations</span> and <span
                class="legend-label inhibit">inhibitions</span>.
        </figcaption>
    </figure>
</d-figure>