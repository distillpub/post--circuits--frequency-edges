<% units = require("../../static/diagrams/1.4-tuning-curves/units.json").units%>

<style>
    .upstream-nmf {
        display: grid;
        grid-gap: 2rem;
        margin-bottom: 2rem;
    }

    .upstream-nmf .row {
        display: grid;
        grid-template-columns: 1fr 1fr 6fr;
        grid-gap: inherit;
        grid-row-gap: 0.5rem;

    }

    .units,
    .weights {
        display: grid;
        grid-template-columns: repeat(6, 1fr);
        grid-gap: 0.5rem;
        grid-column-start: 3;
    }

    img.fv {
        max-width: 100%;
        border-radius: 0.25rem;
    }

    img.full {
        width: unset;
        object-fit: none;
        object-position: center;
        image-rendering: optimizeQuality;
    }

    img.weight {
        width: 100%;
        image-rendering: pixelated;
        align-self: center;
        border: 1px solid #ccc;
    }

    .layer-label {
        grid-row-start: span 2;
    }

    .layer-label label {
        display: inline-block;
        /* transform: rotate(-90deg); */
    }

    .legend-label {
        padding: .125rem .25rem;
        border-radius: 2px;
        color: rgba(0, 0, 0, 0.8);
    }

    .legend-label.support {
        background-color: #EE880088;
    }

    .legend-label.inhibit {
        background-color: #0088EE88;
    }
</style>

<figure>
    <div class="upstream-nmf">

        <div class="row">
            <div class="layer-label"><label class="figcaption">mixed3a</label></div>
            <div class="units">
                <% for (const unit of units) {%>
                <img class="fv full" src="<%= `diagrams/1.1-feature-vis/neuron-${unit.index}.png` %>"
                    title="<%= "Unit " + unit.index %>" />
                <% } %>
            </div>
        </div>


        <% for (const [factor_layer, fv_layer] of [["maxpool1", "conv2d2"], ["conv2d1", "conv2d1"]]) {%>
        <div class="row">
            <div class="layer-label"><label class="figcaption"><%= fv_layer %></label></div>
            <% for (const [factor, hilo] of [[1, "hi"], [0, "lo"]]) {%>
            <img class="fv full" src="<%= `diagrams/2.1-upstream-nmf/${fv_layer}-${hilo}.png` %>" />
            <div class="weights">
                <% for (const unit of units) {%>
                <img class="weight"
                    src="<%= `diagrams/2.1-upstream-nmf/neuron=${unit.index}-layer=${factor_layer}-factor=${factor}.png` %>" />
                <% } %>
            </div>
            <% } %>
        </div>
        <% } %>



    </div>
    <figcaption>
        <p>Using NMF factorization on the weights connecting six High-Low frequency detectors to the two directly
            preceding convolutional layers, <code>conv2d2</code> and <code>conv2d1</code>. The two factors correspond to
            high and low frequencies, as becomes apparent in their feature visualizations. (Left column).</p>
        <p>Their spatial arrangement is also very clear, with LF factors <span class="legend-label support">supporting
                areas</span> in which High-Low frequency detectors expect low frequencies, and <span
                class="legend-label inhibit">inhibiting areas</span> in which they expect HF factors. The two factors
            are very close to symmetric. Weight magnitudes normalized between -1 <img class="color-legend"
                src="diagrams/2.1-upstream-nmf/pn-legend.png" /> and 1.</p>
    </figcaption>
</figure>